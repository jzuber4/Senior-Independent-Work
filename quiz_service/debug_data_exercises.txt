{"leftAttempts":1,"title":"Binary Search Tree Construction","leftMilliseconds":120000,"seed":949877,"promptPretty":"Insert the the following sequence of keys into an initially empty BST\n by clicking on the empty nodes.","prompt":"Give the level-order traversal of the BST that results after inserting\nthe following sequence of keys into an initially empty BST:\n\n    68 35 41 50 60 62 42 43 28 30 ","type":"SHORTANSWER","referenceNum":1,"promptPrettyStructure":"68 35 41 50 60 62 42 43 28 30 "}
{"leftAttempts":1,"title":"Binary Search Tree Search","leftMilliseconds":120000,"seed":635429,"promptPretty":"Given a BST whose level-order traversal is:\n\n    62 53 80 12 65 95 17 81 99 23 \n\nSuppose that you search for the key 27. What is the sequence of keys\nin the BST that are compared with 27 during the search miss?","prompt":"Given a BST whose level-order traversal is:\n\n    62 53 80 12 65 95 17 81 99 23 \n\nSuppose that you search for the key 27. What is the sequence of keys\nin the BST that are compared with 27 during the search miss?","type":"SHORTANSWER","referenceNum":2,"promptPrettyStructure":"{\"name\":\"62\",\"children\":[{\"name\":\"53\",\"children\":[{\"name\":\"12\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"17\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"23\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]}]}]},{\"name\":\"\",\"children\":[]}]},{\"name\":\"80\",\"children\":[{\"name\":\"65\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]},{\"name\":\"95\",\"children\":[{\"name\":\"81\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]},{\"name\":\"99\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]}]}]}]}"}
{"leftAttempts":2,"title":"Hibbard deletion in a BST","leftMilliseconds":120000,"seed":213943,"prompt":"Given a BST whose level-order traversal is:\n\n    91 41 26 81 15 47 88 19 44 78 82 48 \n\nWhat is the level-order traversal of the resulting BST after Hibbard deleting\nthe following three keys?\n\n    48 26 41 ","type":"SHORTANSWER","referenceNum":0}
{"leftAttempts":2,"title":"Linear Probing Hash Table","leftMilliseconds":120000,"seed":876741,"prompt":"Give the array that results after inserting the following sequence of 10 keys\ninto an initially empty linear-probing hash table.\n\nkey  hash\n---  ----\n S    3\n I    3\n T    4\n P    0\n F    0\n J    4\n B    6\n U    5\n X    8\n E    9\n\nAssume that the size of the hash table is 10 and that it neither grows nor shrink.","type":"SHORTANSWER","referenceNum":0}
{"leftAttempts":2,"title":"Linear Probing Generability","leftMilliseconds":120000,"seed":338144,"statements":["M N H V B Y W ","M N H V B W Y ","H V N Y M W B ","M Y H W V B N ","W M N B V Y H "],"prompt":"Suppose that the following keys are inserted into an initially empty linear-probing hash table\nbut not necessarily in the order given:\n\nkey  hash\n---  ----\n B    3\n H    2\n M    0\n N    1\n V    2\n W    3\n Y    5\n\nAssuming that the size of the hash table is 7 and that it does not grow or shrink,\nwhich one or more of the following could be the contents of the resulting array?","type":"CHECKBOX","referenceNum":0}
{"leftAttempts":2,"title":"Properties of Balanced Search Trees","leftMilliseconds":120000,"seed":976447,"statements":["Consider two paths from the root to a null link in a red-black BST on N nodes. Then, the maximum difference in the length of the two paths is a constant.","The maximum height of a 2-3 tree with N keys is ~ lg N.","The height of a red-black BST on N nodes is less than or equal to 2 lg N.","The height of a red-black BST on N nodes is less than or equal to 2 log_3 N.","In a red-black BST on N nodes, the search and insert operations take logarithmic time in the worst case."],"prompt":"Which of the following statements about balanced search trees are true? Check all that apply. Unless otherwise specified, assume that the 2-3 tree and red-black BSTs are as described in lecture (e.g., 2-3 trees are perfectly balanced and red-black BST are left-leaning red-black BSTs with internal links colored either red or black).","type":"CHECKBOX","referenceNum":0}
{"leftAttempts":2,"title":"Empirical Analysis","leftMilliseconds":60000,"seed":43511,"prompt":"Download http:\/\/coursera.cs.princeton.edu\/algs4\/Timing.class\n\nUsing the value 43511 for the seed, estimate the order of growth of the running time\nof the function call Timing.trial(N, seed) as a function of N. To do so, write a program that\ncalls Timing.trial(N, seed) for different values of N and measures how long each function call\ntakes (e.g., via the Stopwatch library in algs4.jar). Then, formulate a doubling hypothesis to\nestimate the order of growth.\n\nAssume that the running time obeys a power law T(N) ~ a N^b. For your answer, enter the\nconstant b. Your answer will be marked as correct if it is within 5% of the target answer -\nwe recommend using two digits after the decimal separator, e.g., 2.34.","type":"NUMERIC","referenceNum":0}
{"leftAttempts":2,"title":"Analysis","leftMilliseconds":60000,"seed":840144,"statements":["1","log N","N^(1\/2)","N","N log N","N^(3\/2)","N^2","N^2 log N","N^(5\/2)","N^3","N^4","N^5","N^6","N^7"],"prompt":"What is the order of growth of the worst case running time of the following code fragment\nas a function of N?\n\nint sum = 0;\nfor (int i = 1; i <= 4*N*N; i = i*3)\n    sum++;\n","type":"RADIO","referenceNum":0}
