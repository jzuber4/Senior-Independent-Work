{"leftAttempts":2,"status":"FINISHED","seed":840144,"maxScore":"5.0","explanation":"The i loops iterates ~ log_3 (4 N^2) ~ 2 log_3 N times.","answer":"1","type":"RADIO","referenceNum":0,"userAnswer":"2","title":"Analysis","statements":["1","log N","N^(1\/2)","N","N log N","N^(3\/2)","N^2","N^2 log N","N^(5\/2)","N^3","N^4","N^5","N^6","N^7"],"userScore":"0.0","prompt":"What is the order of growth of the worst case running time of the following code fragment\nas a function of N?\n\nint sum = 0;\nfor (int i = 1; i <= 4*N*N; i = i*3)\n    sum++;\n"}
{"leftAttempts":2,"status":"FINISHED","maxScore":"5.0","seed":891651,"explanation":"Here is the level-order traversal of the BST after each insertion: \n\n79:  79 \n66:  79 66 \n96:  79 66 96 \n90:  79 66 96 90 \n52:  79 66 96 52 90 \n61:  79 66 96 52 90 61 \n19:  79 66 96 52 90 19 61 \n74:  79 66 96 52 74 90 19 61 \n99:  79 66 96 52 74 90 99 19 61 \n38:  79 66 96 52 74 90 99 19 61 38 \n","answer":"79 66 96 52 74 90 99 19 61 38","type":"SHORTANSWER","referenceNum":1,"userAnswer":"{\"name\":\"79\",\"children\":[{\"name\":\"66\",\"children\":[{\"name\":\"52\",\"children\":[{\"name\":\"19\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"38\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]}]},{\"name\":\"61\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]}]},{\"name\":\"74\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]}]},{\"name\":\"96\",\"children\":[{\"name\":\"90\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]},{\"name\":\"99\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]}]}]}","title":"Binary Search Tree Construction","explanationPrettyStructure":"[\"{\\\"name\\\":\\\"79\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}\",\"{\\\"name\\\":\\\"79\\\",\\\"children\\\":[{\\\"name\\\":\\\"66\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}\",\"{\\\"name\\\":\\\"79\\\",\\\"children\\\":[{\\\"name\\\":\\\"66\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"96\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]}\",\"{\\\"name\\\":\\\"79\\\",\\\"children\\\":[{\\\"name\\\":\\\"66\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"96\\\",\\\"children\\\":[{\\\"name\\\":\\\"90\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]}\",\"{\\\"name\\\":\\\"79\\\",\\\"children\\\":[{\\\"name\\\":\\\"66\\\",\\\"children\\\":[{\\\"name\\\":\\\"52\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"96\\\",\\\"children\\\":[{\\\"name\\\":\\\"90\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]}\",\"{\\\"name\\\":\\\"79\\\",\\\"children\\\":[{\\\"name\\\":\\\"66\\\",\\\"children\\\":[{\\\"name\\\":\\\"52\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"61\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"96\\\",\\\"children\\\":[{\\\"name\\\":\\\"90\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]}\",\"{\\\"name\\\":\\\"79\\\",\\\"children\\\":[{\\\"name\\\":\\\"66\\\",\\\"children\\\":[{\\\"name\\\":\\\"52\\\",\\\"children\\\":[{\\\"name\\\":\\\"19\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"61\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"96\\\",\\\"children\\\":[{\\\"name\\\":\\\"90\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]}\",\"{\\\"name\\\":\\\"79\\\",\\\"children\\\":[{\\\"name\\\":\\\"66\\\",\\\"children\\\":[{\\\"name\\\":\\\"52\\\",\\\"children\\\":[{\\\"name\\\":\\\"19\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"61\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]},{\\\"name\\\":\\\"74\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]},{\\\"name\\\":\\\"96\\\",\\\"children\\\":[{\\\"name\\\":\\\"90\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]}\",\"{\\\"name\\\":\\\"79\\\",\\\"children\\\":[{\\\"name\\\":\\\"66\\\",\\\"children\\\":[{\\\"name\\\":\\\"52\\\",\\\"children\\\":[{\\\"name\\\":\\\"19\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"61\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]},{\\\"name\\\":\\\"74\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]},{\\\"name\\\":\\\"96\\\",\\\"children\\\":[{\\\"name\\\":\\\"90\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"99\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]}]}\",\"{\\\"name\\\":\\\"79\\\",\\\"children\\\":[{\\\"name\\\":\\\"66\\\",\\\"children\\\":[{\\\"name\\\":\\\"52\\\",\\\"children\\\":[{\\\"name\\\":\\\"19\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"38\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]},{\\\"name\\\":\\\"61\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]},{\\\"name\\\":\\\"74\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]},{\\\"name\\\":\\\"96\\\",\\\"children\\\":[{\\\"name\\\":\\\"90\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]},{\\\"name\\\":\\\"99\\\",\\\"children\\\":[{\\\"name\\\":\\\"\\\",\\\"children\\\":[]},{\\\"name\\\":\\\"\\\",\\\"children\\\":[]}]}]}]}\"]","promptPretty":"Insert the the following sequence of keys into an initially empty BST\n by clicking on the empty nodes.","userScore":"5.0","prompt":"Give the level-order traversal of the BST that results after inserting\nthe following sequence of keys into an initially empty BST:\n\n    79 66 96 90 52 61 19 74 99 38 ","promptPrettyStructure":"79 66 96 90 52 61 19 74 99 38 "}
{"leftAttempts":2,"status":"FINISHED","maxScore":"5.0","seed":122176,"explanation":"","answer":"25 70 63 52","type":"SHORTANSWER","referenceNum":2,"userAnswer":"25 70 63 52","title":"Binary Search Tree Search","promptPretty":"Given a BST whose level-order traversal is:\n\n    25 22 70 63 85 52 66 95 34 26 \n\nSuppose that you search for the key 58. What is the sequence of keys\nin the BST that are compared with 58 during the search miss?","userScore":"5.0","prompt":"Given a BST whose level-order traversal is:\n\n    25 22 70 63 85 52 66 95 34 26 \n\nSuppose that you search for the key 58. What is the sequence of keys\nin the BST that are compared with 58 during the search miss?","promptPrettyStructure":"{\"name\":\"25\",\"children\":[{\"name\":\"22\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]},{\"name\":\"70\",\"children\":[{\"name\":\"63\",\"children\":[{\"name\":\"52\",\"children\":[{\"name\":\"34\",\"children\":[{\"name\":\"26\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]},{\"name\":\"\",\"children\":[]}]},{\"name\":\"\",\"children\":[]}]},{\"name\":\"66\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]}]},{\"name\":\"85\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"95\",\"children\":[{\"name\":\"\",\"children\":[]},{\"name\":\"\",\"children\":[]}]}]}]}]}"}
{"leftAttempts":2,"userAnswer":"13 17 22 43 85 25 78 86 44","title":"Hibbard deletion in a BST","status":"FINISHED","maxScore":"5.0","seed":333876,"explanation":"Here is the level-order traversal of the BST after each deletion:\n\n16:  13 17 22 71 43 85 25 70 78 86 44 \n70:  13 17 22 71 43 85 25 44 78 86 \n71:  13 17 22 78 43 85 25 44 86 \n","userScore":"0.0","answer":"13 17 22 78 43 85 25 44 86","prompt":"Given a BST whose level-order traversal is:\n\n    13 17 16 22 71 43 85 25 70 78 86 44 \n\nWhat is the level-order traversal of the resulting BST after Hibbard deleting\nthe following three keys?\n\n    16 70 71 ","type":"SHORTANSWER","referenceNum":0}
{"leftAttempts":2,"explanations":["H R X W Y U I","W I X Y H R U","No key is in preferred position.","",""],"status":"FINISHED","maxScore":"5.0","seed":922617,"answer":"0 1","type":"CHECKBOX","referenceNum":0,"userAnswer":"0 1 2","title":"Linear Probing Generability","statements":["I U H W X R Y ","R U H W I X Y ","R X Y H I W U ","U H Y I X R W ","I R U H X Y W "],"userScore":"4.0","isCorrect":"[true,true,false,false,false]","prompt":"Suppose that the following keys are inserted into an initially empty linear-probing hash table\nbut not necessarily in the order given:\n\nkey  hash\n---  ----\n H    2\n I    3\n R    5\n U    1\n W    3\n X    4\n Y    5\n\nAssuming that the size of the hash table is 7 and that it does not grow or shrink,\nwhich one or more of the following could be the contents of the resulting array?"}
{"leftAttempts":2,"explanations":["Create a perfectly balanced BST by choosing the (upper) median key to be the root and recursively construct a perfectly balanced BST in each subtree. The resulting tree can be (uniquely) colored to make it a red-black BST. One way to see how is to color every link in the bottommost level red so that the red-black BST has perfect black balance. Note that since we use the upper median (instead of the lower median), whenever there is a right-leaning link that is red, the sibling left-leaning link will also be red. Now, repeatedly apply color flip operations until there are no more right-leaning red links.","The number is 3. Consider the corresponding 2-3 trees: The root is a 3-node and exactly one of its three children is a 3-node.","This is a tricky one. We show that the number of rotations is at most 3N.  First we claim that the total number of color flips is at most N: Each insertion (other than the first one) colors one link red and then performs rotations and color flips to restore the red-black BST invariants; rotations do not change the number of red links; each color flip decreases the number of red links by 1 (typical case) or by 2 (if performed at the root). During an insert operation, after any two consecutive rotation operations, there is a color flip.","Inserting the sequence of 5 keys { 0, 2, 1, 4, 3 } results in a total of 7 rotations.","Applying a left rotation to a right-leaning *red* link maintains perfect black balance. But, here we are applying it to a right-leaning black link. This will increase the number of black links on some paths and decrease it on others."],"status":"FINISHED","maxScore":"5.0","seed":642051,"answer":"0","type":"CHECKBOX","referenceNum":0,"userAnswer":"0 1 2 4","title":"Properties of Balanced Search Trees","statements":["It is possible to construct a red-black BST from a sorted array of N distinct keys in linear time.","The number of structurally different red-black BSTs (with respect to tree shape and link colors) containing 6 keys is 4.","Consider inserting N distinct keys into an initially empty red-black BST. Then, in the worst case, the total number of rotations is linearithmic in N.","Consider inserting N distinct keys into an initially empty red-black BST. Then, the total number of rotations is at most N.","Applying a left rotation to a right-leaning black link maintains perfect black balance (i.e., every path from the root to a null link has the same number of black links)."],"userScore":"2.0","isCorrect":"[true,false,false,false,false]","prompt":"Which of the following statements about balanced search trees are true? Check all that apply. Unless otherwise specified, assume that the 2-3 tree and red-black BSTs are as described in lecture (e.g., 2-3 trees are perfectly balanced and red-black BST are left-leaning red-black BSTs with internal links colored either red or black)."}
{"leftAttempts":2,"status":"FINISHED","seed":586633,"maxScore":"5.0","explanation":"The i loops iterates ~ lg (N^2) ~ 2 lg N times.","answer":"1","type":"RADIO","referenceNum":0,"userAnswer":"1","title":"Analysis","statements":["1","log N","N^(1\/2)","N","N log N","N^(3\/2)","N^2","N^2 log N","N^(5\/2)","N^3","N^4","N^5","N^6","N^7"],"userScore":"5.0","prompt":"What is the order of growth of the worst case running time of the following code fragment\nas a function of N?\n\nint sum = 0;\nfor (int i = 1; i <= N*N; i = i*2)\n    sum++;\n"}
